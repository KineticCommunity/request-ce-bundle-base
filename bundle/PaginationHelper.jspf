<%@page import="com.kineticdata.core.web.bundles.PaginatedList"%>
<%@page import="java.util.*"%>
<%!
    public static class PaginationHelper {
        private HttpServletRequest request;
        private Kapp kapp;
        private BundleSubmissionComponent submissionComponent;

        public PaginationHelper(HttpServletRequest request){
            this.request = request;
            this.kapp = (Kapp)request.getAttribute("kapp");
            this.submissionComponent = (BundleSubmissionComponent)request.getAttribute("Submissions"); 
        }

        public PaginatedList<Submission> getSearchRecords(String formSlug){
            com.kineticdata.core.authentication.Identity identity =
                (com.kineticdata.core.authentication.Identity) request.getAttribute("identity");

            Long date;
            if(request.getParameter("date") != null){
                date = Long.parseLong(request.getParameter("date"));
            } else {
                date = Long.parseLong("30");
            }
            java.time.Instant end = Time.now();
            java.time.Instant start = Time
                .subtract(end, date, "days", java.time.ZoneId.systemDefault());

            java.util.Map<String,String[]> searchOptions = new java.util.HashMap<>();

            searchOptions.put("end", new String[] {Time.format(end)} );
            searchOptions.put("start", new String[] {Time.format(start)} );
            
            // User select the number of record to see in the table display.  By default they see 10.
            if (request.getParameter("limit") != null) {
                searchOptions.put("limit", new String[] {String.valueOf(request.getParameter("limit"))});
            }else{
                searchOptions.put("limit",new String[]{"10"});
            }

            // If a page token exist in the request 
            if(request.getParameter("pageToken") != null){
                searchOptions.put("pageToken", new String[]{request.getParameter("pageToken")});
            }

            if("Approval".equals(request.getParameter("type"))){
                searchOptions.put("values[Assigned Individual]", new String[] {identity.getUsername()});
            } else {
                searchOptions.put("createdBy", new String[] {identity.getUsername()});
            }

            if(request.getParameter("coreState") != null){
                searchOptions.put("coreState", request.getParameterValues("coreState"));
            }

            PaginatedList<Submission> page;
            page = this.submissionComponent.searchByKapp(kapp, searchOptions);
            return page;
        }
    }
%>
